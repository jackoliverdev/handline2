# HandLine Company Website Implementation Plan

## Initial Setup
✅ 1. Create a new Firebase project named "handline-website"
   - Go to https://console.firebase.google.com/
   - Click "Add project" and follow the setup wizard
   - Enable Google Analytics if needed

✅ 2. Set up Supabase project
   - Go to https://supabase.com/
   - Create a new project named "handline-website"
   - Note the project URL and anon key

✅ 3. Update environment variables
   - Create a .env.local file in the project root
   - Add the following variables with your new values:
     ```
     NEXT_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co
     NEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key
     NEXT_PUBLIC_FIREBASE_API_KEY=your-api-key
     NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=your-project-id.firebaseapp.com
     NEXT_PUBLIC_FIREBASE_PROJECT_ID=your-project-id
     NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=your-project-id.appspot.com
     NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=your-messaging-sender-id
     NEXT_PUBLIC_FIREBASE_APP_ID=your-app-id
     ```

✅ 4. Update Firebase configuration
   - Modify components/firebase-providers.tsx with the new config values

## Database Setup
✅ 5. Create Supabase database tables
   - Go to your Supabase project dashboard
   - Navigate to the SQL Editor
   - Create the following tables:
     - products (for safety gloves and equipment)
     - blog_posts (for industry news and updates)
     - industry_solutions (for sector-specific solutions)
   - Use the schema defined in the brief or adjust as needed

✅ 6. Set up Supabase storage buckets
   - Create the following buckets:
     - products
     - industries
     - blog
     - website

## Brand and Design Implementation
✅ 7. Update colour scheme in tailwind.config.ts
   - Primary Orange: #F28C38
   - Dark Grey: #1E1E1E
   - Light Beige: #F5EFE0
   - White: #FFFFFF
   - Secondary Grey: #5A5A5A

✅ 8. Add fonts to the project
   - Add Montserrat and Open Sans to the app/layout.tsx file
   - Update typography classes in components

## Component Cleanup
✅ 9. Remove unused golf-related components
   - Delete components/website/golf-home/ directory
   - Delete components/website/range/ directory
   - Delete components/website/lessons/ directory
   - Delete components/website/booking/ directory
   - Delete app/(main)/fitting/ directory
   - Delete app/(main)/range/ directory
   - Delete app/(main)/lessons/ directory
   - Delete app/(main)/booking/ directory

## New Page Structure Implementation
✅ 10. Update navigation menu
    - Modify components/navbar/main-nav.tsx with new navigation items
    - Create new navigation links for Products, Industries, About Us, Blog, Contact

11. Create Home page components
    ✅ - Update components/website/home/hero.tsx
    ✅ - Create components/website/home/industry-solutions.tsx
    ✅ - Create components/website/home/expertise-section.tsx
    ✅ - Create components/website/home/featured-products.tsx

12. Create About Us page and components
    - Create app/(main)/about/ directory with page.tsx
    - Create components/website/about/company-history.tsx
    - Create components/website/about/mission-values.tsx
    - Create components/website/about/team.tsx

13. Update Products page and components
    ✅ - Update app/(main)/products/ page.tsx
    ✅ - Update components/website/products/hero.tsx
    ✅ - Create components/website/products/product-filter.tsx
    ✅ - Create components/website/products/product-card.tsx
    ✅ - Create components/website/products/specification-table.tsx

14. Create Industries/Solutions page and components
    ✅ - Create app/(main)/industries/ directory with page.tsx
    ✅ - Create components/website/industries/hero.tsx
    ✅ - Create components/website/industries/industry-card.tsx
    ✅ - Create components/website/industries/case-study.tsx

15. Update Blog page and components
    - Update app/(main)/blog/ page.tsx
    - Update components/website/blog/hero.tsx
    - Create components/website/blog/post-card.tsx
    - Create components/website/blog/post-detail.tsx

16. Update Contact page
    - Update app/(main)/contact/ page.tsx
    - Update components/website/contact/hero.tsx
    - Create components/website/contact/contact-form.tsx
    - Create components/website/contact/map.tsx

17. Update Footer
    - Modify components/footer.tsx with HandLine Company information

## API Routes and Data Fetching
18. Create API routes for data fetching
    - Create app/api/products/ routes for fetching product data
    - Create app/api/blog/ routes for fetching blog posts
    - Create app/api/industries/ routes for fetching industry solutions

19. Implement data fetching in page components
    - Use Supabase client for server-side rendering
    - Implement client-side filtering for products

## Responsive Design Implementation
20. Ensure all components are responsive
    - Add responsive styling to all components
    - Test on various device sizes

## Content Population
21. Add sample product data to Supabase
    - Create at least 10 sample products with images
    - Include detailed specifications for each product

22. Add industry solutions content
    - Create at least 5 industry categories
    - Add sample content for each industry

23. Add blog posts
    - Create at least 3 sample blog posts
    - Include images and content relevant to the safety glove industry

## Final Testing and Optimization
24. Test all site functionality
    - Check navigation and filtering
    - Verify all pages load correctly
    - Test contact form submission

25. Optimize for SEO
    - Add metadata to all pages
    - Implement proper heading structure
    - Add alt text to all images

26. Performance optimization
    - Optimize image loading with next/image
    - Implement lazy loading where appropriate
    - Test and optimize Core Web Vitals 



FUTURE IDEAS:
- 3D GLOVES HERO? 
